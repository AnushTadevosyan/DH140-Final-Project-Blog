[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Final_Project",
    "section": "",
    "text": "date-modified: “07/26/2023”\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJul 30, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJul 27, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/Topics.html",
    "href": "posts/Topics.html",
    "title": "date-modified: “07/26/2023”",
    "section": "",
    "text": "– title: “Crime in United States” description: “This blogpost is analyzing crimes in US states over range of years” author: “Anush Tadevosyan” date: “07/26/2023”\n\nIntroduction\nFor this project, I have chosen to work with the dataset that contains information about various crimes in US states for a wide range of years\nLink to Dataset: https://corgis-edu.github.io/corgis/csv/state_crime/\nI have chosen this dataset as I was always interested in crime stories, documentaries and statistics. I am curious to see what I can find. My end goal is to find the safest state and the most dangerous state in terms of crimes and try to predict which state will be safest in future and which state will be more dangerous in future using machine learning!\nTo-DO : see which state had highest type of crime per year\n\n\nData Presentation & Exploration\nBasic Information: The dataset classify crimes into two groups: property & violent crime.Property crime refers to burglary, larceny, and motor related crime while violent crime refers to assault, murder, rape, and robbery. These reports go from 1960 to 2019. With this in mind, let’s understand and explore our data.\nThe dataset has 21 columns and 3115 rows. We can see that the years of data goes from 1960 to 2019. We can also see that half of data is for years 1990-2019. If we look at overall rate of the two major types of crimes (property & violent)\nIt should include at least 4 exploratory data visualizations\n\nimport pandas as pd\nfrom sklearn.preprocessing import LabelEncoder\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ncrime_data = pd.read_csv('/home/jovyan/DH140-Final-Project/state_crime.csv')\n\n\n#total data summary\ncrime_data.describe()\n\n\n\n\n\n\n\n\nYear\nData.Population\nData.Rates.Property.All\nData.Rates.Property.Burglary\nData.Rates.Property.Larceny\nData.Rates.Property.Motor\nData.Rates.Violent.All\nData.Rates.Violent.Assault\nData.Rates.Violent.Murder\nData.Rates.Violent.Rape\nData.Rates.Violent.Robbery\nData.Totals.Property.All\nData.Totals.Property.Burglary\nData.Totals.Property.Larceny\nData.Totals.Property.Motor\nData.Totals.Violent.All\nData.Totals.Violent.Assault\nData.Totals.Violent.Murder\nData.Totals.Violent.Rape\nData.Totals.Violent.Robbery\n\n\n\n\ncount\n3115.000000\n3.115000e+03\n3115.000000\n3115.000000\n3115.000000\n3115.000000\n3115.000000\n3115.000000\n3115.000000\n3115.000000\n3115.000000\n3.115000e+03\n3.115000e+03\n3.115000e+03\n3.115000e+03\n3.115000e+03\n3.115000e+03\n3115.000000\n3115.000000\n3115.000000\n\n\nmean\n1989.544141\n9.708502e+06\n3542.202311\n876.532520\n2322.659133\n343.011300\n397.877047\n237.365040\n6.477207\n30.179872\n123.853258\n3.560081e+05\n8.977698e+04\n2.275827e+05\n3.864856e+04\n4.594917e+04\n2.659748e+04\n663.911717\n3034.240449\n15653.541894\n\n\nstd\n17.299570\n3.506750e+07\n1418.191397\n446.531611\n897.934463\n221.654068\n287.498896\n159.336737\n5.886449\n16.694626\n143.261882\n1.321823e+06\n3.376635e+05\n8.460659e+05\n1.469896e+05\n1.759960e+05\n1.032963e+05\n2437.666178\n11714.612850\n60348.473626\n\n\nmin\n1960.000000\n2.261670e+05\n573.100000\n126.300000\n293.300000\n28.400000\n9.500000\n3.600000\n0.200000\n0.800000\n1.900000\n3.147000e+03\n7.510000e+02\n1.489000e+03\n1.780000e+02\n3.700000e+01\n1.400000e+01\n1.000000\n6.000000\n8.000000\n\n\n25%\n1975.000000\n1.279156e+06\n2472.650000\n535.000000\n1663.800000\n185.600000\n217.200000\n124.000000\n3.100000\n18.500000\n42.700000\n3.974500e+04\n9.613500e+03\n2.619500e+04\n3.227000e+03\n3.318000e+03\n2.056000e+03\n48.000000\n328.000000\n816.500000\n\n\n50%\n1990.000000\n3.358000e+06\n3438.400000\n796.600000\n2275.700000\n288.900000\n342.200000\n205.100000\n5.400000\n28.800000\n93.800000\n1.092840e+05\n2.703800e+04\n7.142300e+04\n9.468000e+03\n1.154800e+04\n6.755000e+03\n186.000000\n931.000000\n3256.000000\n\n\n75%\n2005.000000\n6.082836e+06\n4439.100000\n1133.850000\n2877.500000\n437.200000\n518.250000\n319.350000\n8.400000\n39.800000\n152.800000\n2.253325e+05\n5.562000e+04\n1.461155e+05\n2.124150e+04\n2.880400e+04\n1.756700e+04\n464.000000\n1930.000000\n8337.000000\n\n\nmax\n2019.000000\n3.282395e+08\n9512.100000\n2906.700000\n5833.800000\n1839.900000\n2921.800000\n1557.600000\n80.600000\n161.600000\n1635.100000\n1.296112e+07\n3.795200e+06\n8.142228e+06\n1.661738e+06\n1.932274e+06\n1.135607e+06\n24703.000000\n139815.000000\n687732.000000\n\n\n\n\n\n\n\n\n#first major crime group summary: property\ncrime_data['Data.Totals.Property.All'].describe()\n\ncount    3.115000e+03\nmean     3.560081e+05\nstd      1.321823e+06\nmin      3.147000e+03\n25%      3.974500e+04\n50%      1.092840e+05\n75%      2.253325e+05\nmax      1.296112e+07\nName: Data.Totals.Property.All, dtype: float64\n\n\n\n#second major crime group summary: property\ncrime_data['Data.Totals.Violent.All'].describe()\n\ncount    3.115000e+03\nmean     4.594917e+04\nstd      1.759960e+05\nmin      3.700000e+01\n25%      3.318000e+03\n50%      1.154800e+04\n75%      2.880400e+04\nmax      1.932274e+06\nName: Data.Totals.Violent.All, dtype: float64\n\n\nDescriptive Statistics: We can clearly see that the number of violent crimes over a period of time, over all the states is higher than the number of property crimes\n\ncorr_year_property_crime = crime_data['Year'].corr(crime_data['Data.Totals.Property.All'])\ncorr_year_property_crime\n\n0.030803762684870506\n\n\n\ncorr_year_violent_crime = crime_data['Year'].corr(crime_data['Data.Totals.Violent.All'])\ncorr_year_violent_crime\n\n0.062184163818709594\n\n\nCorrelations: To-Do\n\nmissing_values_cd = crime_data.isnull()\nmissing_values_count = missing_values_cd.sum()\nprint(missing_values_count)\n\nState                            0\nYear                             0\nData.Population                  0\nData.Rates.Property.All          0\nData.Rates.Property.Burglary     0\nData.Rates.Property.Larceny      0\nData.Rates.Property.Motor        0\nData.Rates.Violent.All           0\nData.Rates.Violent.Assault       0\nData.Rates.Violent.Murder        0\nData.Rates.Violent.Rape          0\nData.Rates.Violent.Robbery       0\nData.Totals.Property.All         0\nData.Totals.Property.Burglary    0\nData.Totals.Property.Larceny     0\nData.Totals.Property.Motor       0\nData.Totals.Violent.All          0\nData.Totals.Violent.Assault      0\nData.Totals.Violent.Murder       0\nData.Totals.Violent.Rape         0\nData.Totals.Violent.Robbery      0\ndtype: int64\n\n\nMissing Values: We can see that we have no missing values in our dataset by the result of the above cell!\n\nlabel_encoder = LabelEncoder()\ncrime_data['State_Encoded'] = label_encoder.fit_transform(crime_data['State'])\n\nstate_encoding_mapping = dict(zip(label_encoder.classes_, label_encoder.transform(label_encoder.classes_)))\n\n\nprint(state_encoding_mapping)\n\n{'Alabama': 0, 'Alaska': 1, 'Arizona': 2, 'Arkansas': 3, 'California': 4, 'Colorado': 5, 'Connecticut': 6, 'Delaware': 7, 'District of Columbia': 8, 'Florida': 9, 'Georgia': 10, 'Hawaii': 11, 'Idaho': 12, 'Illinois': 13, 'Indiana': 14, 'Iowa': 15, 'Kansas': 16, 'Kentucky': 17, 'Louisiana': 18, 'Maine': 19, 'Maryland': 20, 'Massachusetts': 21, 'Michigan': 22, 'Minnesota': 23, 'Mississippi': 24, 'Missouri': 25, 'Montana': 26, 'Nebraska': 27, 'Nevada': 28, 'New Hampshire': 29, 'New Jersey': 30, 'New Mexico': 31, 'New York': 32, 'North Carolina': 33, 'North Dakota': 34, 'Ohio': 35, 'Oklahoma': 36, 'Oregon': 37, 'Pennsylvania': 38, 'Rhode Island': 39, 'South Carolina': 40, 'South Dakota': 41, 'Tennessee': 42, 'Texas': 43, 'United States': 44, 'Utah': 45, 'Vermont': 46, 'Virginia': 47, 'Washington': 48, 'West Virginia': 49, 'Wisconsin': 50, 'Wyoming': 51}\n\n\nEncoding Categorical Values: Above, we encoded the variable state as later, it might be useful when doing time-series analysis, maybe using additional data related to states etc\n\n# See how much data per state, can the dataset be skewed? how many rows per state?\nnumber_of_rows_for_state = []\nlist_of_state_names = []\n\nfor key,value in state_encoding_mapping.items():\n    list_of_state_names.append(key)\n    key_data = crime_data[crime_data['State'] == key]\n    number_of_rows_for_state.append(key_data.shape[0])\n\nplt.bar(state_encoding_mapping.values(),number_of_rows_for_state)\nplt.xlabel('State')\nplt.ylabel('Number of rows (info) for state')\nplt.title('States and Number of Rows for them')\nplt.show()\n\n\n\n\n\nAs we can see, there are 60 entries per state (besides New York) so we don’t have to worry about data being skewed or bias (disproportionally many rows for a state). I don’t consider 5 less entries to be bias for the purposes of this research\n\n# Scatter plot: Property crimes vs Year vs Encoded States\n\nplt.figure(figsize=(10, 6))\nplt.scatter(crime_data['Year'], crime_data['Data.Totals.Property.All'], c=crime_data['State_Encoded'], cmap='viridis')\nplt.colorbar(label='Encoded State')\nplt.xlabel('Year')\nplt.ylabel('Property Crime Rates')\nplt.title('Scatter Plot: Year vs. Property Crime Numbers with Encoded State')\nplt.show()\n\n\n\n\n\n# Scatter plot: Violent crimes vs Year vs Encoded States\n\nplt.figure(figsize=(10, 6))\nplt.scatter(crime_data['Year'], crime_data['Data.Totals.Violent.All'], c=crime_data['State_Encoded'], cmap='viridis')\nplt.colorbar(label='Encoded State')\nplt.xlabel('Year')\nplt.ylabel('Property Crime Rates')\nplt.title('Scatter Plot: Year vs. Violent Crime Numbers with Encoded State')\nplt.show()\n\n\n\n\n\nplt.figure(figsize=(12, 8))\ncrime_data[['Data.Rates.Property.All', 'Data.Rates.Violent.All']].boxplot()\nplt.title('Box Plot: Property Crime Rates vs. Violent Crime Rates')\nplt.ylabel('Rates per 100,000 population')\nplt.xticks([1, 2], ['Property Crime Rates', 'Violent Crime Rates'])\nplt.show()\n\n\n\n\nData Disrtibution & Outliers: Through scatter plots, call them outliers or states with significant crime, we can see that total number of violent crimes and total number of property crimes is significantly larger in one of the state, which is in this group - ‘South Carolina’: 40, ‘South Dakota’: 41, ‘Tennessee’: 42, ‘Texas’: 43, ‘United States’: 44, ‘Utah’: 45, ‘Vermont’: 46, ‘Virginia’: 47, ‘Washington’: 48, ‘West Virginia’: 49, ‘Wisconsin’: 50, ‘Wyoming’: 51 Through analysis later, we will figure out which state exactly that is.\nThrough box plot, we can see that over the years and over the states, the rate of property crimes is larger than the rate of violent crimes (rates per 100,000 population). This is interesting to keep in mind. We can also see that there is a fair amount of outliers for both of the crime rate, which suggests that there has been years and states, where during those years, that specific state was an “exception” compared to others and had a higher crime rate. Note that the outliers for violent crime rates are more tightly stacked together, suggesting that the rate of violent crimes faced way more exceptions than the rate of property crimes\n\n\nAnalysis\nNow, let’s dive into our analysis. In order to get an answer for our final question, we will answer a set of related questions to help us guide to the final answer\nDraft Plan 1. For each state, what is the type of crime commited the most per year given in the dataset? Property or violence? 2. For each state, what is the rate of crimes commited (property or violent) per 100,000 people? (make a visualization) 3.What is the overall mean property crime and violent crime rate for each state? 4. Start filtering out the states. Based on our analsysis, which state is the safest state and the most dangerous state? (make a visulization) 5. What state will be the safest in future and most dangerous in future? (use naive bayes prediction and maybe for crime rate comparison) 6. Support findings with article analyzations (web scraping and analyze those articles using sentiment analysis) (make a visulization)\nLet us discover what is the group of crime (property or violence) commited the most (in terms on numbers, not rate) in every year in our dataset per state. Hence, we will be looking at 52 graphs.\n\n# make a list of state names from crime_data\nstate_name_list = crime_data['State'].tolist()\n# get rid of duplicates\nstate_name_list = list(set(state_name_list))\n\n#TO-DO: put these graphs all together in smaller size (tightlayout)\n\nfor state in state_name_list:\n    state_data = crime_data[crime_data['State'] == state]\n    plt.plot(state_data['Year'], state_data['Data.Totals.Property.All'], label='Number of property crimes', color='blue')\n    plt.xlabel('Year')\n    plt.ylabel('Number of property crimes', color='blue')\n    ax2 = plt.gca().twinx() \n    ax2.plot(state_data['Year'], state_data['Data.Totals.Violent.All'], label='Number of violent crimes', color='red')\n    ax2.set_ylabel('Number of violent crimes', color='red')\n    plt.title(f'{state}')\n    plt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo-DO: analyze the findings per each state - short summary\nQuestion #2: To-DO - make a tight layout\n\n# Question #3: \n\n# How did overall crime rate change over time? \n#(take the mean of crime numbers (total violent and total property)\n#in year X for each state and make a graph) - \n#x is year and y is number of crimes. \n#is America getting more dangerous? (make a visulization)\n\nstate_list = crime_data['State'].unique()\nyear_list = crime_data['Year'].unique()\nstate_average_data = {}\n\nfor state in state_list:\n    total_property_rate = 0\n    total_violent_rate = 0\n    \n    for year in year_list:\n        state_year_data = crime_data[(crime_data['State'] == state) & (crime_data['Year'] == year)]\n        if not state_year_data.empty: #new york lacks some years\n            total_property_rate += state_year_data['Data.Totals.Property.All'].iloc[0]\n            total_violent_rate += state_year_data['Data.Totals.Violent.All'].iloc[0]\n    \n    average_property_rate = total_property_rate / len(year_list)\n    average_violent_rate = total_violent_rate / len(year_list)\n    state_average_data[state] = {'Average_Property_Total': average_property_rate, 'Average_Violent_Total': average_violent_rate}\n\nprint(state_average_data)\n  \n  \n\n{'Alabama': {'Average_Property_Total': 136768.5, 'Average_Violent_Total': 18508.666666666668}, 'Alaska': {'Average_Property_Total': 20261.5, 'Average_Violent_Total': 3019.5333333333333}, 'Arizona': {'Average_Property_Total': 197824.86666666667, 'Average_Violent_Total': 19911.033333333333}, 'Arkansas': {'Average_Property_Total': 78616.93333333333, 'Average_Violent_Total': 10001.683333333332}, 'California': {'Average_Property_Total': 1208911.4166666667, 'Average_Violent_Total': 178274.26666666666}, 'Colorado': {'Average_Property_Total': 146760.38333333333, 'Average_Violent_Total': 13687.4}, 'Connecticut': {'Average_Property_Total': 103832.43333333333, 'Average_Violent_Total': 9536.616666666667}, 'Delaware': {'Average_Property_Total': 26798.433333333334, 'Average_Violent_Total': 3519.0333333333333}, 'District of Columbia': {'Average_Property_Total': 38926.46666666667, 'Average_Violent_Total': 10208.016666666666}, 'Florida': {'Average_Property_Total': 618748.6833333333, 'Average_Violent_Total': 92006.7}, 'Georgia': {'Average_Property_Total': 267742.1, 'Average_Violent_Total': 31531.683333333334}, 'Hawaii': {'Average_Property_Total': 50483.583333333336, 'Average_Violent_Total': 2509.116666666667}, 'Idaho': {'Average_Property_Total': 31387.916666666668, 'Average_Violent_Total': 2468.8}, 'Illinois': {'Average_Property_Total': 419136.35, 'Average_Violent_Total': 71362.3}, 'Indiana': {'Average_Property_Total': 189577.03333333333, 'Average_Violent_Total': 19014.233333333334}, 'Iowa': {'Average_Property_Total': 82625.78333333334, 'Average_Violent_Total': 6069.05}, 'Kansas': {'Average_Property_Total': 90718.7, 'Average_Violent_Total': 8476.583333333334}, 'Kentucky': {'Average_Property_Total': 93422.66666666667, 'Average_Violent_Total': 9916.483333333334}, 'Louisiana': {'Average_Property_Total': 166274.36666666667, 'Average_Violent_Total': 25214.483333333334}, 'Maine': {'Average_Property_Total': 31184.75, 'Average_Violent_Total': 1462.2333333333333}, 'Maryland': {'Average_Property_Total': 182855.31666666668, 'Average_Violent_Total': 31413.85}, 'Massachusetts': {'Average_Property_Total': 190894.58333333334, 'Average_Violent_Total': 26613.083333333332}, 'Michigan': {'Average_Property_Total': 373326.38333333336, 'Average_Violent_Total': 51955.13333333333}, 'Minnesota': {'Average_Property_Total': 142725.1, 'Average_Violent_Total': 10470.266666666666}, 'Mississippi': {'Average_Property_Total': 71379.55, 'Average_Violent_Total': 7701.033333333334}, 'Missouri': {'Average_Property_Total': 194511.08333333334, 'Average_Violent_Total': 25464.9}, 'Montana': {'Average_Property_Total': 27897.966666666667, 'Average_Violent_Total': 1889.2666666666667}, 'Nebraska': {'Average_Property_Total': 50064.21666666667, 'Average_Violent_Total': 4168.283333333334}, 'Nevada': {'Average_Property_Total': 59584.083333333336, 'Average_Violent_Total': 9304.75}, 'New Hampshire': {'Average_Property_Total': 24746.95, 'Average_Violent_Total': 1386.05}, 'New Jersey': {'Average_Property_Total': 250409.31666666668, 'Average_Violent_Total': 30264.333333333332}, 'New Mexico': {'Average_Property_Total': 68482.88333333333, 'Average_Violent_Total': 9776.683333333332}, 'New York': {'Average_Property_Total': 586752.9333333333, 'Average_Violent_Total': 114974.15}, 'North Carolina': {'Average_Property_Total': 246830.16666666666, 'Average_Violent_Total': 30799.833333333332}, 'North Dakota': {'Average_Property_Total': 14100.9, 'Average_Violent_Total': 705.55}, 'Ohio': {'Average_Property_Total': 376886.11666666664, 'Average_Violent_Total': 37474.316666666666}, 'Oklahoma': {'Average_Property_Total': 120534.76666666666, 'Average_Violent_Total': 13305.216666666667}, 'Oregon': {'Average_Property_Total': 129653.21666666666, 'Average_Violent_Total': 10191.533333333333}, 'Pennsylvania': {'Average_Property_Total': 284103.1666666667, 'Average_Violent_Total': 39508.666666666664}, 'Rhode Island': {'Average_Property_Total': 34552.76666666667, 'Average_Violent_Total': 2691.516666666667}, 'South Carolina': {'Average_Property_Total': 138643.0, 'Average_Violent_Total': 22546.833333333332}, 'South Dakota': {'Average_Property_Total': 15684.533333333333, 'Average_Violent_Total': 1378.2833333333333}, 'Tennessee': {'Average_Property_Total': 176231.88333333333, 'Average_Violent_Total': 27627.833333333332}, 'Texas': {'Average_Property_Total': 769527.7666666667, 'Average_Violent_Total': 87850.6}, 'United States': {'Average_Property_Total': 9257655.883333333, 'Average_Violent_Total': 1194983.4166666667}, 'Utah': {'Average_Property_Total': 74449.88333333333, 'Average_Violent_Total': 4367.433333333333}, 'Vermont': {'Average_Property_Total': 14435.9, 'Average_Violent_Total': 619.5}, 'Virginia': {'Average_Property_Total': 181328.58333333334, 'Average_Violent_Total': 17226.883333333335}, 'Washington': {'Average_Property_Total': 228140.98333333334, 'Average_Violent_Total': 17172.583333333332}, 'West Virginia': {'Average_Property_Total': 35292.183333333334, 'Average_Violent_Total': 3684.1}, 'Wisconsin': {'Average_Property_Total': 146787.65, 'Average_Violent_Total': 10252.45}, 'Wyoming': {'Average_Property_Total': 14278.95, 'Average_Violent_Total': 1061.45}}"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]